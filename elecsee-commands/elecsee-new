#!/bin/bash

export SUFFIX=${CONTAINER##*-}
export PREFIX=${CONTAINER%-${SUFFIX}}


[ ! ${SUFFIX} = model ] && (
    sudo lxc-stop --name ${PREFIX}-model
    sudo lxc-destroy -f --name ${CONTAINER}
    sudo lxc-copy --name ${PREFIX}-model --newname ${CONTAINER}
    sudo lxc-stop --name ${CONTAINER} 
    sudo lxc-start --name ${CONTAINER}
)  || (
    sudo lxc-destroy -f ${CONTAINER}
    sudo lxc-create --name ${CONTAINER} -t download -- ${LINUX} 
    sudo lxc-stop --name ${CONTAINER}
    sudo lxc-start --name ${CONTAINER}
) 

${ELECSEE} net ${CONTAINER}
[ "${SUFFIX}" = "model" ] && ${ELECSEE} cmd ${CONTAINER} apt install ssh 

exit
echo add your ssh public key to container

( 
cat << EOF
apt install -y ssh
EOF
) | sudo lxc-attach --name ${CONTAINER}
    #sudo lxc file push ~/.ssh/id_rsa.pub ${container}/home/ubuntu/.ssh/authorized_keys
)

#echo add container to /etc/hosts, prepare known_hosts for new entry

#lxc list -cn4 --format csv | grep -e "^${container}," | cut -d' ' -f1 | (
#    [ "${debug}" = "true" ] && set -x
#    read NIP; 
#    ssh-keygen -R "${NIP##*,}" > /dev/null 2>&1
#    ssh-keygen -R "${NIP%%,*}" > /dev/null 2>&1
#    echo "${NIP##*,}"$'\t'"${NIP%%,*}";
#    grep -v  '^'${NIP##*,} /etc/hosts | grep -v "\s${NIP%%,*}\s|\$"\
#) > /tmp/newhosts && sudo mv /tmp/newhosts /etc/hosts

#echo add container to known hosts and test connection

#(
#set -x
#while true
#do
#    ssh -oStrictHostKeyChecking=accept-new ubuntu@${container} echo disconnecting && break
#    sleep 1
#done
#) >> ${logfile} 2>&1
#
#
#[ -f $(dirname $0)/scripts/${prefix} ] && bash $(dirname $0)/scripts/${prefix}
#
## stop it if we are recreating the model
#
#lxc-ls | grep ${container}
#[ "${suffix}" = "model" ] && (
#    sudo lxc stop  ${container}
#) >> ${logfile} 2>&1
#
