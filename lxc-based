#!/bin/bash

# see README.md
LINUX=ubuntu:18.04

# 'lxc-linux lxcu-model' will create a stopped linux container to use as model
# 'lxc-linux lxcu-mine' will copy lxcu-model to the lxcu-mine instance
#     you can now ssh ubuntu@lxcu-mine
# 
# if the script 'scripts/lxcu' exists, it will be called after container creation
#    continuing the same environment from this
#
# All these containeres will be entered into to /etc/hosts

export container=$1
export suffix=${container##*-}
export prefix=${container%-${suffix}}
[[ $- == *x* ]] && debug=true || debug=false
[ "${debug}" = "true" ] && logfile=/dev/stdout || logfile=/dev/null
export logfile debug

echo ensure normal user with sudo rights

if [ "$EUID" = "0" ]
  then echo "Run as user, not root, sudo will be used where appropriate"
  exit 1
fi


[ ! ${suffix} = model ] && (
    sudo lxc stop  ${prefix}-model
    sudo lxc delete -f ${container}
    sudo lxc copy --container-only ${prefix}-model ${container}
    sudo lxc config set ${container} boot.autostart false
    sudo lxc stop  ${container} 
    sudo lxc start  ${container}
) >> ${logfile} 2>&1 || (
    sudo lxc delete -f ${container}
    sudo lxc launch ${LINUX}  ${container}
    sudo lxc config set ${container} boot.autostart false
    sudo lxc stop ${container}
    sudo lxc start ${container}
) >> ${logfile} 2>&1

echo wait for container to start

(
cat << EOF
(
    while true
    do
        ping -c 1 linuxcontainers.org  && break
        sleep 1
    done 
)
EOF
) | sudo lxc shell  ${container} >> ${logfile} 2>&1


echo add your ssh public key to container

[ "${suffix}" = "model" ] && (
( 
cat << EOF
apt install ssh
EOF
) | sudo lxc shell  ${container} >/dev/null 2>&1
    sudo lxc file push ~/.ssh/id_rsa.pub ${container}/home/ubuntu/.ssh/authorized_keys
) >> ${logfile} 2>&1

echo add container to /etc/hosts, prepare known_hosts for new entry

lxc list -cn4 --format csv | grep -e "^${container}," | cut -d' ' -f1 | (
    [ "${debug}" = "true" ] && set -x
    read NIP; 
    ssh-keygen -R "${NIP##*,}" > /dev/null 2>&1
    ssh-keygen -R "${NIP%%,*}" > /dev/null 2>&1
    echo "${NIP##*,}"$'\t'"${NIP%%,*}";
    grep -v  '^'${NIP##*,} /etc/hosts | grep -v "\s${NIP%%,*}\s|\$"\
) > /tmp/newhosts && sudo mv /tmp/newhosts /etc/hosts

echo add container to known hosts and test connection

(
set -x
while true
do
    ssh -oStrictHostKeyChecking=accept-new ubuntu@${container} echo disconnecting && break
    sleep 1
done
) >> ${logfile} 2>&1


[ -f $(dirname $0)/scripts/${prefix} ] && bash $(dirname $0)/scripts/${prefix}

# stop it if we are recreating the model

lxc-ls | grep ${container}
[ "${suffix}" = "model" ] && (
    sudo lxc stop  ${container}
) >> ${logfile} 2>&1

