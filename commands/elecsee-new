#!/bin/bash
[ "${debug}" = "true" ] && set -x

function hlp(){
( cat << EOF
    new creates conteiner from a model, and if the model does not exist, it creates the model first - see 'doc' for more info
EOF
)
}

function doc(){
( cat << EOF
    new creates conteiner from a model, and if the model does not exist, it creates the model first 
        models are placed in the script directory and have to functions which are called from this script
        'model' is called if a model does not exist
        'instance' is called last and creates a container of the specified name

        a container called solr-1 wil have a model called solr-model, hence model is a forbidden container suffix in elecsee
EOF
)
}

function model(){
    export CONTAINER=${PREFIX}-model
    lxc-destroy -f ${CONTAINER}
    lxc-create --name ${CONTAINER} -t download -- ${LINUX}  >> ${logfile} 2>&1
    lxc-start --name ${CONTAINER}
    ${ELECSEE} net ${CONTAINER}
    CONTEXT=model /bin/bash ${ELECSEE_SCRIPTS}/ssh
    CONTEXT=model /bin/bash ${ELECSEE_SCRIPTS}/${PREFIX}
}

function instance(){
    lxc-stop --name ${PREFIX}-model
    lxc-destroy -f --name ${CONTAINER}
    lxc-copy --name ${PREFIX}-model --newname ${CONTAINER}
    lxc-start --name ${CONTAINER}
    ${ELECSEE} net ${CONTAINER}
    ${ELECSEE} hst
}


function new(){
    for CONTAINER in ${CONTAINERS}
    do
        export CONTAINER
        export SUFFIX=${CONTAINER##*-}
        export PREFIX=${CONTAINER%-${SUFFIX}}
        ${ELECSEE} lst | grep '^'${PREFIX}-model' ' >> ${logfile} 2>&1 || (
            echo building model
            (model)
        )
        echo building ${CONTAINER}
        (instance >> ${logfile} 2>&1)
        CONTEXT=instance /bin/bash ${ELECSEE_SCRIPTS}/ssh
        CONTEXT=instance /bin/bash ${ELECSEE_SCRIPTS}/${PREFIX}
        lxc-stop --name ${CONTAINER}
        lxc-start --name ${CONTAINER}
    done
}

$CMD
